#include<bits/stdc++.h>

void findCombination(int idx , int target , vector<int>&arr,    vector<vector<int>>&ans,vector<int>&ds){
    if(target == 0){
        ans.push_back(ds);
        return ;
    }
    if(idx==arr.size()){
        return;
    }
    ds.push_back(arr[idx]);
    findCombination(idx+1,target-arr[idx],arr,ans,ds);
//     reject in your world
    ds.pop_back();
    while(idx+1<arr.size() and arr[idx] == arr[idx+1]){idx++;}
     findCombination(idx+1,target,arr,ans,ds);
    
}

vector<vector<int>> combinationSum2(vector<int> &arr, int n, int target)
{
	sort(arr.begin(),arr.end());
    vector<vector<int>>ans;
    vector<int>ds;
    findCombination(0, target,arr,ans,ds);
    return ans;
}
