#include<string>

void fill_lps(vector<int>&lps, string & pat){
    lps[0] = 0 ;
    int i = 1 ;
    int len = 0 ;
    while(i<pat.size()){
        if(pat[i] == pat[len]){
            lps[i] = len+1;
            len++;
            i++;
        }
        else{
            if(len == 0){
                lps[i] =  0;
                i++;
            }
            else{
                len = lps[len-1];
            }
        }
    }
}

bool kmp(string & text , string & pat){
    int i = 0;
    int j = 0;
    vector<int>lps(pat.size(),0);
    fill_lps(lps,pat);
    while(i<text.size()){
        if(text[i] == pat[j]){
            i++;
            j++;
        }
        if(j == pat.size()){
            return true;
            j = lps[j-1];
        }
        else if(i<text.size() and text[i] != pat[j]){
            if(j==0){i++;}
            else {
                j = lps[j-1];
            }
        }
    }
    return false;
}


bool findPattern(string p, string s)
{
   
    return kmp(s,p);
}
