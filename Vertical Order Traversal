#include<bits/stdc++.h>
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    //    Write your code here.
     if(root == NULL){
        return {};
    }
    queue<pair<TreeNode<int> * , int>>q;
    q.push({root,0}); 
    map<int, vector<int>>ump;
    while(!q.empty()){
        auto p =q.front();
        q.pop();
        TreeNode<int>  * curr = p.first;
        int hd = p.second;  
        ump[hd].push_back(curr->data) ;
        if(curr->left!=NULL){
            q.push({curr->left,hd-1});
        }
        if(curr->right !=NULL){
            q.push({curr->right , hd+1});
        }
    }
    vector<int>ans;
    for(auto x :ump){
        for(auto y:x.second)
        ans.push_back(y);
    }
    return ans;
    
}
