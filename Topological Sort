#include<bits/stdc++.h>

void convertor(unordered_map<int,list<int>> & adj,vector<vector<int>> &edges){
    for(int i = 0 ;i<edges.size();i++){
        int u = edges[i][0];
        int v = edges[i][1];
        adj[u].push_back(v);
//         adj[v].push_back(u);
    }
}

void dfs(int nodes,  vector<bool>&visited ,stack<int>&st,unordered_map<int,list<int>> & adj){
    visited[nodes] =true;
    for(auto it : adj[nodes]){
        if(visited[it] == false)
            dfs(it,visited,st,adj);
    }
//     insert the last item in to the stack 
    st.push(nodes);
}

vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    unordered_map<int,list<int>> adj;
    convertor(adj,edges);
    vector<bool>visited(v+1,false);
    vector<int>ans;
        vector<int>visited(V,false);
        dfs(adj,0,visited,ans);
        
        reverse(ans.begin(),ans.end());
        return ans;
//     return topo;
}
