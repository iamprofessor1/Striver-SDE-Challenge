/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.
    BinaryTreeNode<int>* successor = NULL;
    BinaryTreeNode<int>* curr =root;
    while(curr!=NULL){
        if(curr->data > key){
            successor= curr;
            curr = curr->left;
        }
        else{
            curr = curr->right;
        }
    }
     BinaryTreeNode<int>* predeccor = NULL;
    curr = root;
    while(curr!=NULL){
        if(curr->data < key){
            predeccor = curr;
            curr= curr->right;
        }
        else{
            curr = curr->left;
        }
    }
     int pred= predeccor == NULL?-1 : predeccor->data;
     int succ=successor ==NULL ?-1 : successor->data;
    
    return {pred,succ};
}
