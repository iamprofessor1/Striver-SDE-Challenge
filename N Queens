bool check(vector<vector<int>>&matrix, int n , int i,int j){
//     row wise fill kara rahe hai 
//     toh column se matlab hai
     int starti = i;
    while(starti>=0){
        if(matrix[starti][j] == 1)return false;
        starti--;
    }
//     checking upper left Diagonal 
    starti = i;
    int startj =j;
    while(starti>= 0  and startj >=0 ){
        if(matrix[starti][startj] == 1){
            return false;;
        }
        starti--;
        startj--;
    }
    //     checking upper right Diagonal 
    starti = i;
     startj =j;
     while(starti>= 0  and startj <=n-1 ){
        if(matrix[starti][startj] == 1){
            return false;;
        }
        starti--;
        startj++;
    }
    return true;
}


void solve(int startRow , int n ,vector<vector<int>>& matrix,vector<vector<int>>&solution ){
    if(startRow == n){
        vector<int>temp;
        for(int i = 0 ; i<n ;i++){
            for(int j = 0 ; j<n ;j++){
                temp.push_back(matrix[i][j]);
            }
        }
        solution.push_back(temp);
        return ;
    }
    for(int j = 0 ; j<n ;j++){
        if(check(matrix,n,startRow,j)){
            matrix[startRow][j] = 1;
            solve(startRow+1,n,matrix,solution);
            matrix[startRow][j] = 0; // backtracing
            
        }
    }
    
    
    
}





vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    vector<vector<int>>matrix(n,vector<int>(n,0));
    vector<vector<int>>solution;
    int startRow = 0;
    solve(startRow,n,matrix,solution);
    return solution;
}
