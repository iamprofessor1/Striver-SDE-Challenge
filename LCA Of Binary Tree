/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

TreeNode<int>  * lca(TreeNode<int>  * root , int x , int y){
    
    if(root == NULL){
        return NULL;
    }
    if(root->data == x || root->data == y){
        return root;
    }
    TreeNode<int> * lca1 = lca(root->left,x,y);
    TreeNode<int> * lca2 = lca(root->right , x,y);
     if(lca1 == NULL){
         return lca2;
     }  
    else if(lca2 == NULL){
        return lca1;
    }
    
    else{
//         if both root and left and right is not NULL
        return root; 
    }
}


int lowestCommonAncestor(TreeNode<int> *root, int x, int y)
{
	//    Write your code here
    return lca(root,x,y)->data;
    
}
